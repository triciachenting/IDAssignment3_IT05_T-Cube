/*main content display*/

.boxx {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

/*score panel display*/

.score {
    display: flex;
    text-align: left;
    margin-bottom: 10px;
    flex-direction: row;
}

.score .stars {
    margin: 0;
    padding: 0;
    display: inline-block;
    margin: 0 5px 0 0;
}

.score .stars li {
    list-style: none;
    display: inline-block;
}

.score .restart {
    float: right;
    cursor: pointer;
}

/*main game cards display*/

.deck {
    width: 85%;
	background: #716F71;
	padding: 1rem;
	border-radius: 4px;
	box-shadow: 8px 9px 26px 0 rgba(46, 61, 73, 0.5);
	display: flex;
	flex-wrap: wrap;
	justify-content: space-around;
	align-items: center;
}

.deck .card {
    height: 3.7rem;
	width: 3.7rem;
	margin: 0.2rem 0.2rem;
	background: #141214;;
	font-size: 0;
	color: black;
	border-radius: 5px;
	cursor: pointer;
	display: flex;
	justify-content: center;
	align-items: center;
	box-shadow: 5px 2px 20px 0 rgba(46, 61, 73, 0.5);
}

.deck .card.open {
    transform: rotateY(0);
    background: white;
    cursor: default;
    animation-name: flipopen;
    backface-visibility: visible !important;
    animation-duration: 1s;
}

.deck .card.show {
    font-size: 40px
}

.deck .card.match {
    cursor: default;
    background-color: yellowgreen;
    font: 40px;
    animation-name: match;
    backface-visibility: visible !important;
    animation-duration: 0.5s;
}

.deck .card.unmatched {
    animation-name: unmatched;
    backface-visibility: visible !important;
    animation-duration: 0.5s;
    background: red;
}

.deck .card.disabled {
    pointer-events: none;
    opacity: 0.9;
}

/*animations*/

@keyframes flipopen {
    from {
        transform: perspective(400px) rotate3d(0, 1, 0, 90deg);
        animation-timing-function: ease-in;
        opacity: 0;
    }
    40% {
        transform: perspective(400px) rotate3d(0, 1, 0, -20deg);
        animation-timing-function: ease-in;
    }
    60% {
        transform: perspective(400px) rotate3d(0, 1, 0, 10deg);
        opacity: 1;
    }
    80% {
        transform: perspective(400px) rotate3d(0, 1, 0, -5deg);
    }
    to {
        transform: perspective(400px);
    }
}

@keyframes match {
    from {
        transform: scale3d(1, 1, 1);
    }
    30% {
        transform: scale3d(1.25, 0.75, 1);
    }
    40% {
        transform: scale3d(0.75, 1.25, 1);
    }
    50% {
        transform: scale3d(1.15, 0.85, 1);
    }
    65% {
        transform: scale3d(.95, 1.05, 1);
    }
    75% {
        transform: scale3d(1.05, .95, 1);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}

@keyframes unmatched {
    from {
        transform: scale3d(1, 1, 1);
    }
    50% {
        transform: scale3d(1.2, 1.2, 1.2);
    }
    to {
        transform: scale3d(1, 1, 1);
    }
}